--EJERCICIO 1--
CREATE OR REPLACE FUNCTION SUMACOMPLEMENTOS (P_DNI N_EMPLEADOS.DNI%TYPE)
RETURN NUMBER 
AS 
    P_EUROS_COMPL N_COMPLEMENTOS.EUROS_COMPL%TYPE;
BEGIN 
    SELECT NVL(SUM(EUROS_COMPL),0) INTO P_EUROS_COMPL FROM N_EMPLEADOS_COMPL EC
    JOIN N_COMPLEMENTOS C ON EC.COD_COMPL=C.COD_COMPL
    WHERE EC.DNI=P_DNI;
    RETURN P_EUROS_COMPL;
END SUMACOMPLEMENTOS;

DECLARE
    P_EUROS_COMPL N_COMPLEMENTOS.EUROS_COMPL%TYPE;
    P_DNI N_EMPLEADOS.DNI%TYPE := &DNI;
BEGIN
    P_EUROS_COMPL:= SUMACOMPLEMENTOS(P_DNI);
    DBMS_OUTPUT.PUT_LINE ('TOTAL COMPLEMENTOS: '||P_EUROS_COMPL||'€');
END;

--EJERCICIO 2--
CREATE OR REPLACE FUNCTION CALCULARIRPF (P_NRO_HIJOS N_EMPLEADOS.NRO_HIJOS%TYPE, P_SUELDO_BASE N_NIVELES.SUELDO_BASE%TYPE)
RETURN NUMBER AS 
    P_IRPF NUMBER;
BEGIN
    IF P_SUELDO_BASE < 1500 THEN
        P_IRPF := 0.1;
    ELSIF P_SUELDO_BASE >= 1500 AND P_SUELDO_BASE <= 2000 THEN
        P_IRPF := 0.15;
    ELSE
        P_IRPF := 0.2;
    END IF;
    
    IF P_NRO_HIJOS = 1 OR P_NRO_HIJOS = 2 THEN
        P_IRPF := P_IRPF - 0.02;
    ELSIF P_NRO_HIJOS = 3 OR P_NRO_HIJOS = 4 THEN
        P_IRPF := P_IRPF - 0.05;
    ELSIF P_NRO_HIJOS > 4 THEN
        P_IRPF := P_IRPF - 0.06;
    END IF;
    
    RETURN P_IRPF;
END;


DECLARE
    P_NRO_HIJOS N_EMPLEADOS.NRO_HIJOS%TYPE := &Nº_HIJOS;
    P_SUELDO_BASE N_NIVELES.SUELDO_BASE%TYPE := &SUELDO_BASE;
    P_IRPF NUMBER;
BEGIN
    P_IRPF := CALCULARIRPF(P_NRO_HIJOS,P_SUELDO_BASE);
    DBMS_OUTPUT.PUT_LINE ('TOTAL COMPLEMENTOS: '||P_IRPF * 100||'%');
END;

--EJERCICIO 3--

CREATE OR REPLACE PROCEDURE CALCULARSUELDODEPAR(
  P_COD_DEP N_DEPARTAMENTOS.COD_DEP%TYPE,
  P_COD_NIVEL N_NIVELES.COD_NIVEL%TYPE,
  P_TOTAL_SUELDO OUT NUMBER
)
AS
  CURSOR C_EMPLEADOS IS
    SELECT E.DNI, E.NRO_HIJOS, N.SUELDO_BASE, N.EUROS_UN_TRIENIO, E.NRO_TRIENIOS
    FROM N_EMPLEADOS E
    JOIN N_NIVELES N ON E.COD_NIVEL = N.COD_NIVEL
    WHERE E.COD_DEP = P_COD_DEP AND E.COD_NIVEL = P_COD_NIVEL;
    
  V_EMPLEADO C_EMPLEADOS%ROWTYPE;
  V_SUMA_COMPLEMENTOS NUMBER;
  V_PORCENTAJE_IRPF NUMBER;
  V_SUELDO_BRUTO NUMBER;
  
  NO_EXISTE_DEPARTAMENTO EXCEPTION;
  NO_HAY_EMPLEADOS_DEPART EXCEPTION;
  NO_HAY_EMPLEADOS_CURSOR EXCEPTION;
BEGIN
  SELECT COUNT(*)
  INTO P_TOTAL_SUELDO
  FROM N_DEPARTAMENTOS
  WHERE COD_DEP = P_COD_DEP;
  
  IF P_TOTAL_SUELDO = 0 THEN
    RAISE NO_EXISTE_DEPARTAMENTO;
  END IF;
  
  SELECT COUNT(*)
  INTO P_TOTAL_SUELDO
  FROM N_EMPLEADOS
  WHERE COD_DEP = P_COD_DEP;
  
  IF P_TOTAL_SUELDO = 0 THEN
    RAISE NO_HAY_EMPLEADOS_DEPART;
  END IF;
  
  P_TOTAL_SUELDO := 0;
  
--  OPEN C_EMPLEADOS;
  
  --LOOP
    --FETCH C_EMPLEADOS INTO V_EMPLEADO;
  FOR V_EMPLEADO IN C_EMPLEADOS 
  
  LOOP
    EXIT WHEN C_EMPLEADOS%NOTFOUND;
    
    V_SUMA_COMPLEMENTOS := SUMACOMPLEMENTOS(V_EMPLEADO.DNI);
    
    V_PORCENTAJE_IRPF := CALCULARIRPF(V_EMPLEADO.NRO_HIJOS, V_EMPLEADO.SUELDO_BASE);
    
    V_SUELDO_BRUTO := V_EMPLEADO.SUELDO_BASE + (V_EMPLEADO.NRO_TRIENIOS * V_EMPLEADO.EUROS_UN_TRIENIO) + V_SUMA_COMPLEMENTOS;
    
   P_TOTAL_SUELDO := P_TOTAL_SUELDO + (V_SUELDO_BRUTO - (V_SUELDO_BRUTO * V_PORCENTAJE_IRPF));
   
  END LOOP;
  
 -- CLOSE C_EMPLEADOS;

  IF P_TOTAL_SUELDO = 0 THEN
    RAISE NO_HAY_EMPLEADOS_CURSOR;
  END IF;
EXCEPTION
  WHEN NO_EXISTE_DEPARTAMENTO THEN
    P_TOTAL_SUELDO := -1;
    
  WHEN NO_HAY_EMPLEADOS_DEPART THEN
    P_TOTAL_SUELDO := -2;
    
  WHEN NO_HAY_EMPLEADOS_CURSOR THEN
    P_TOTAL_SUELDO := -3;
END;

DECLARE
P_TOTAL_SUELDO NUMBER;
P_COD_DEP N_DEPARTAMENTOS.COD_DEP%TYPE :=&CODIGO; 
P_COD_NIVEL N_NIVELES.COD_NIVEL%TYPE :=&NIVEL;
BEGIN

CALCULARSUELDODEPAR(P_COD_DEP,P_COD_NIVEL,P_TOTAL_SUELDO); 

    IF P_TOTAL_SUELDO = -1 THEN
    DBMS_OUTPUT.PUT_LINE('NO EXISTE ESE DEPARTAMENTO');
    ELSIF P_TOTAL_SUELDO = -2 THEN
    DBMS_OUTPUT.PUT_LINE('EL DEPARTAMENTO NO TIENE EMPLEADOS');
    ELSIF P_TOTAL_SUELDO = -3 THEN
    DBMS_OUTPUT.PUT_LINE('NO HAY EMPLEADOS QUE CUMPLAN LAS CONDICIONES');
    ELSE 
    DBMS_OUTPUT.PUT_LINE('EL TOTAL DE LOS SUELDOS NETOS DE LOS EMPLEADOS DEL DEPARTAMENTO Y NIVEL ESPECIFICADOS ES '||P_TOTAL_SUELDO||'€');
    END IF;

END;
